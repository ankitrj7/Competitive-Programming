_#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node * left;
    node * right;
};
node * createnode(int data)
{
    node * p = new node();
    p->data = data;
    p->left = NULL;
    p->right = NULL;
    return p;
}
node * createtree(vector<int> &intvect,vector<char> & charvect,int & index)
{
    node * root = createnode(intvect[index]);
    if(index>=intvect.size())
    return NULL;
        
    if(charvect[index]=='L')
    {
        index+=1;
        return root;
    }
    else
    {
     index+=1;
     root->left = createtree(intvect,charvect,index);
     root->right = createtree(intvect,charvect,index);;
     return root;
    }
}
void inorder(node * root)
{
    if(root==NULL)
    return;
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
int main ()
{
    int index=0,i;
    vector<int> intvect;
    vector<char> charvect;
    int n;
    cin>>n;
    intvect.resize(n);
    charvect.resize(n);
    for(i=0;i<n;i++)
    cin>>intvect[i];
    
    for(i=0;i<n;i++)
    cin>>charvect[i];
    
    node * root = createtree(intvect,charvect,index);
    inorder(root);
    
}